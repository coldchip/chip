class Client {
	int fd;
	method constructor(int fd) : void {
		this.fd = fd;
	}

	method read(char[] buffer, int size) : int {
		return syscall(63, this.fd, buffer, size) : int;
	}

	method write(char[] data, int size) : int {
		return syscall(64, this.fd, data, size) : int;
	}

	method write(String str) :  int {
		char[] a = str.getBytes();
		return this.write(a, a.count);
	}

	method close() : void {
		syscall(65, this.fd) : void;
	}
}

class Socket {
	char[] ip;
	int port;
	int fd;
	method constructor(char[] ip, int port) : void {
		this.ip = ip;
		this.port = port;
		this.fd = syscall(60) : int;
	}

	method bind() : int {
		return syscall(61, this.fd, this.ip, this.port) : int;
	}

	method accept() : Client {
		int fd = syscall(62, this.fd) : int;
		return new Client(fd);
	}
}

class Header {
	String buffer;
	method constructor() : void {
		this.buffer = new String();
		this.buffer.append("HTTP/1.0 200 OK\r\n");
	}

	method append(char[] k, char[] v) : void {
		this.buffer.append(k);
		this.buffer.append(":");
		this.buffer.append(v);
		this.buffer.append("\r\n");
	}

	method append(char[] k, String v) : void {
		this.append(k, v.getBytes());
	}

	method append(String k, char[] v) : void {
		this.append(k.getBytes(), v);
	}

	method append(String k, String v) : void {
		this.append(k.getBytes(), v.getBytes());
	}

	method length() : int {
		return this.buffer.length();
	}

	method toString() : String {
		this.buffer.append("\r\n");
		return this.buffer;
	}
}