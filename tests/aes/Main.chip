import String;
import Array;
import Convert;
import Console;

class AES {
	char[] sbox;
	int[] state;
	int nb;
	method constructor() : void {
		this.nb = 4;
		this.sbox = new char[](256);

		this.state = new int[](4);
		this.state[0] = new char[](4);
		this.state[1] = new char[](4);
		this.state[2] = new char[](4);
		this.state[3] = new char[](4);

		int j = 0;
		while(j < 4) {
			int i = 0;
			while(i < 4) {
				this.state[j][i] = <char>0;		
				i = i + 1;
			}
			j = j + 1;
		}

		this.state[0][0] = 10;
		this.state[0][1] = 20;
		this.state[0][2] = 30;
		this.state[0][3] = 40;

		this.state[1][0] = 20;
		this.state[1][1] = 30;
		this.state[1][2] = 40;
		this.state[1][3] = 50;

		this.state[2][0] = 30;
		this.state[2][1] = 40;
		this.state[2][2] = 50;
		this.state[2][3] = 60;

		this.state[3][0] = 40;
		this.state[3][1] = 50;
		this.state[3][2] = 60;
		this.state[3][3] = 70;

		int y = 0;
		while(y < 12) {
			this.state = this.shiftRows(this.state);
			this.state = this.mixColumns(this.state);
			this.printRows(this.state);
			y = y + 1;
		}
	}

	method printRows(int[] state) : void {
		int j = 0;
		while(j < 4) {
			int i = 0;
			while(i < 4) {
				Console.write(<int>this.state[j][i]);
				Console.write(":");
				i = i + 1;
			}
			Console.write("\n");
			j = j + 1;
		}
	}

	method shiftRows(int[] state) : int[] {
		int s1;
		int s2;
		int s3;
		int s4;

		s1 = state[1][1];
		s2 = state[2][1];
		s3 = state[3][1];
		s4 = state[0][1];
        state[0][1] = s1;
        state[1][1] = s2;
        state[2][1] = s3;
        state[3][1] = s4;

        s1 = state[2][2];
		s2 = state[3][2];
		s3 = state[0][2];
		s4 = state[1][2];
	    state[0][2] = s1;
	    state[1][2] = s2;
	    state[2][2] = s3;
	    state[3][2] = s4;

	    s1 = state[3][3];
		s2 = state[0][3];
		s3 = state[1][3];
		s4 = state[2][3];
	    state[0][3] = s1;
	    state[1][3] = s2;
	    state[2][3] = s3;
	    state[3][3] = s4;

        return state;
    }

    method xtime(int b) : int {
        if ((b & 128) == 0) {
            return b << 1;
        }
        return (b << 1) ^ 283;
    }

    method mult(int a, int b) : int {
        int sum = 0;
        while (!(a == 0)) {
            if (!((a & 1) == 0)) {
                sum = sum ^ b;
            }
            b = this.xtime(b);
            a = a >> 1;
        }
        return sum;

    }

    method mixColumnsSingle(int[] state) : int[] {
        int t = state[0] ^ state[1] ^ state[2] ^ state[3];
	    int u = state[0];
	    state[0] = state[0] ^ t ^ this.xtime(state[0] ^ state[1]);
	    state[1] = state[1] ^ t ^ this.xtime(state[1] ^ state[2]);
	    state[2] = state[2] ^ t ^ this.xtime(state[2] ^ state[3]);
	    state[3] = state[3] ^ t ^ this.xtime(state[3] ^ u);

        return state;
    }

    method mixColumns(int[] state) : int[] {
        int i = 0;
		while(i < 4) {
			state[i] = this.mixColumnsSingle(state[i]);
			i = i + 1;
		}
        return state;
    }
}

class Main {
	method main() : void {
		AES aes = new AES();

		return;
	}
}